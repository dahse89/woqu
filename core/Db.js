// Generated by CoffeeScript 1.9.1
(function() {
  var Db, Sqlz;

  Sqlz = require('sequelize');

  Db = (function() {
    function Db(master) {
      this.master = master;
      this.update = true;
      this.debugOutput = false;
      this.models = {};
      this.orm = new Sqlz('Test', '', '', {
        host: 'localhost',
        dialect: 'sqlite',
        storage: './tasks.db',
        logging: this.debugOutput
      });
    }

    Db.prototype.getModels = function() {
      return this.models;
    };

    Db.prototype.getOrm = function() {
      return this.orm;
    };

    Db.prototype.init = function(ready) {
      var loggedWorkSchema, models, orm, ref, taskSchema;
      taskSchema = {
        id: {
          type: Sqlz.INTEGER,
          autoIncrement: true,
          primaryKey: true
        },
        description: {
          type: Sqlz.TEXT
        },
        postponed: {
          type: Sqlz.INTEGER
        },
        done_at: {
          type: Sqlz.DATE
        }
      };
      loggedWorkSchema = {
        id: {
          type: Sqlz.INTEGER,
          autoIncrement: true,
          primaryKey: true
        },
        text: {
          type: Sqlz.TEXT
        }
      };
      this.models.Task = this.orm.define('task', taskSchema);
      this.models.LoggedWork = this.orm.define('logged_work', loggedWorkSchema);
      this.models.Task.hasMany(this.models.LoggedWork);
      ref = [this.models, this.orm], models = ref[0], orm = ref[1];
      return this.models.LoggedWork.sync({
        force: this.update
      }).then(function() {
        return this.models.Task.sync({
          force: this.update
        }).then(function() {
          return ready(orm, models);
        });
      });
    };

    return Db;

  })();

  module.exports = Db;

}).call(this);
