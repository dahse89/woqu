// Generated by CoffeeScript 1.4.0
(function() {
  var Task, moment;

  moment = moment = require('moment');

  /**
  * Task
  * data model representing a task that have to be done
  */


  Task = (function() {
    /**
    * class constructor
    * initialize private properies
    */

    function Task() {
      this.id = null;
      this.description = null;
      this.created_at = null;
      this.postponed = null;
      this.done_at = null;
    }

    /**
    * id getter
    * @return int
    */


    Task.prototype.getId = function() {
      return this.id;
    };

    /**
    * id setter
    * @param id int
    */


    Task.prototype.setId = function(id) {
      this.id = id;
      return this;
    };

    /**
    * description getter
    * @return string
    */


    Task.prototype.getDescription = function() {
      return this.description;
    };

    /**
    * id setter
    * @param id int
    */


    Task.prototype.setDescription = function(desc) {
      this.description = desc;
      return this;
    };

    /**
    * reated_at getter
    * @return Date
    */


    Task.prototype.getCreatedAt = function() {
      return this.created_at;
    };

    /**
    * id setter
    * @param date Date
    */


    Task.prototype.setCreatedAt = function(date) {
      this.created_at = date;
      return this;
    };

    /**
    * postponed getter
    * @return int
    */


    Task.prototype.getPostponed = function() {
      return this.postponed;
    };

    /**
    * increase postponed property
    */


    Task.prototype.increasePostponed = function() {
      return this.postponed++;
    };

    /**
    * postponed setter
    * @param postponed int
    */


    Task.prototype.setPostponed = function(number) {
      this.postponed = number;
      return this;
    };

    /**
    * done_at getter
    * @return Date
    */


    Task.prototype.getDoneAt = function() {
      return this.done_at;
    };

    /**
    * done_at setter
    * @param done_at Date
    */


    Task.prototype.setDoneAt = function(date) {
      this.done_at = date;
      return this;
    };

    /**
    * initialize an instance of this class by an object
    * @param obj Object
    */


    Task.prototype.init = function(obj) {
      var key, val;
      for (key in obj) {
        val = obj[key];
        this[key] = val;
      }
      return this;
    };

    /**
    * converts an instance of this class to an object
    * the properties will be the same then in there but
    * they will all start with $ to use them in sqlite binding
    */


    Task.prototype.to$Obj = function() {
      var arr, key, val;
      arr = {};
      for (key in this) {
        val = this[key];
        if (typeof val !== 'function') {
          arr['$' + key] = val instanceof Date ? val.getTime() : val;
        }
      }
      return arr;
    };

    /**
    * convert an instance of this class to string
    * @return string
    */


    Task.prototype.toString = function() {
      return "Task #" + this.id + " From: " + (moment(this.created_at).format('DD.MM.YYYY HH:mm:ss')) + "\n" + this.description + "\n[postponed]: " + this.postponed + "\n" + (this.done_at ? '[done]: ' + moment(this.done_at).format('DD.MM.YYYY HH:mm:ss') : ' ');
    };

    return Task;

  })();

  module.exports = Task;

}).call(this);
