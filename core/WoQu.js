// Generated by CoffeeScript 1.9.1
(function() {
  var WoQu,
    slice = [].slice;

  WoQu = (function() {
    var CmdsFactory, IO, Task, _Db, _IO, args, clicolor, db, devMode, fs;
    _Db = require('./Db.js');
    db = null;
    Task = require('./model/Task.js');
    fs = require('fs');
    clicolor = require('cli-color');
    _IO = require('./IO.js');
    IO = null;
    CmdsFactory = require('./CmdsFactory.js');
    args = null;
    devMode = true;
    return {

      /**
      * start woqu app and handle args
       */
      run: function(_devMode) {
        db = new _Db(WoQu);
        IO = new _IO(WoQu);
        return db.init(function() {
          return WoQu.ready(_devMode);
        });
      },
      ready: function(_devMode) {
        devMode = _devMode;
        args = WoQu.getArgs();
        return this.factory(args[0], args.slice(1)).init();
      },
      factory: function(name, args) {
        CmdsFactory.setMaster(WoQu);
        return CmdsFactory.get(name, args);
      },

      /**
      * get relevant args
      * @return array
       */
      getArgs: function() {
        return process.argv.slice(2);
      },

      /**
      * get database model reference
      * @return Db_ref
       */
      getDb: function() {
        return db;
      },

      /**
      * get IO model reference
      * @return IO_ref
       */
      getIO: function() {
        return IO;
      },

      /**
      * get Task class
      * @return Task
       */
      getTask: function() {
        return Task;
      },

      /**
      * check if app is in development mode
      * @return boolean
       */
      isDevMode: function() {
        return devMode;
      },

      /**
      * cli color handle getter
      * @return cli-color_ref
       */
      getCliColor: function() {
        return clicolor;
      },

      /**
       * inline Model Getter
       */
      coreModels: function() {
        var i, models, name, names;
        names = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        models = [];
        for (i in names) {
          name = names[i];
          if (name === 'db') {
            models.push(db);
          }
          if (name === 'IO') {
            models.push(IO);
          }
          if (name === 'fs') {
            models.push(fs);
          }
          if (name === 'clicolor') {
            models.push(clicolor);
          }
        }
        return models;
      }
    };
  })();

  module.exports = WoQu;

}).call(this);
