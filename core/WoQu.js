// Generated by CoffeeScript 1.9.1
(function() {
  var WoQu,
    slice = [].slice;

  module.exports = WoQu = (function() {
    function WoQu(devMode) {
      var CmdsFactory;
      this.devMode = devMode;
      CmdsFactory = require('./CmdsFactory.js');
      this.args = process.argv.slice(2);
      this.coreModels = {
        fs: require('fs'),
        cliColor: require('cli-color'),
        db: null,
        IO: null,
        cmdsFactory: CmdsFactory.setMaster(this)
      };
    }

    WoQu.prototype.woqu = function(name, args) {
      return this.factory('cmdsFactory').get(name, args);
    };

    WoQu.prototype.factory = function() {
      var k, models, names, path, v;
      names = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      models = [];
      if (names.length > 0) {
        for (k in names) {
          v = names[k];
          path = v.split('/');
          if (path.length === 2) {
            switch (path[0]) {
              case 'model':
                models.push(this.factory('db').getModel(path[1]));
                break;
              case 'cmd':
                models.push(this.woqu(path[1], path.slice(2)));
            }
          } else {
            models.push(this.coreModels[path[0]]);
          }
        }
      }
      if (models.length === 1) {
        return models[0];
      }
      return models;
    };

    WoQu.prototype.run = function() {
      var Db, IO;
      Db = require('./Db');
      IO = require('./IO');
      this.coreModels.db = new Db(this);
      this.coreModels.IO = new IO(this);
      return this.ready();
    };

    WoQu.prototype.ready = function() {
      return this.woqu(this.args[0], this.args.slice(1)).init();
    };

    return WoQu;

  })();

}).call(this);
