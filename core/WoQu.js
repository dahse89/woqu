// Generated by CoffeeScript 1.4.0
(function() {
  var WoQu,
    __slice = [].slice;

  WoQu = (function() {
    var CmdsFactory, IO, Task, args, clicolor, db, devMode, fs;
    db = require('./Db.js');
    Task = require('./model/Task.js');
    fs = require('fs');
    clicolor = require('cli-color');
    IO = require('./IO.js');
    CmdsFactory = require('./CmdsFactory.js');
    args = null;
    devMode = true;
    return {
      /**
      * start woqu app and handle args
      */

      run: function(_devMode) {
        var cmd;
        devMode = _devMode;
        args = WoQu.getArgs();
        cmd = CmdsFactory.get(WoQu, args[0], args.slice(1));
        return cmd.init();
      },
      factory: function() {
        return CmdsFactory;
      },
      /**
      * get relevant args
      * @return array
      */

      getArgs: function() {
        return process.argv.slice(2);
      },
      /**
      * get database model reference
      * @return Db_ref
      */

      getDb: function() {
        return db;
      },
      /**
      * get IO model reference
      * @return IO_ref
      */

      getIO: function() {
        return IO;
      },
      /**
      * get Task class
      * @return Task
      */

      getTask: function() {
        return Task;
      },
      /**
      * check if app is in development mode
      * @return boolean
      */

      isDevMode: function() {
        return devMode;
      },
      /**
      * cli color handle getter
      * @return cli-color_ref
      */

      getCliColor: function() {
        return clicolor;
      },
      /**
      # inline Model Getter
      */

      coreModels: function() {
        var i, models, name, names;
        names = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        models = [];
        for (i in names) {
          name = names[i];
          if (name === 'db') {
            models.push(db);
          }
          if (name === 'IO') {
            models.push(IO);
          }
          if (name === 'fs') {
            models.push(fs);
          }
          if (name === 'clicolor') {
            models.push(clicolor);
          }
        }
        return models;
      }
    };
  })();

  module.exports = WoQu;

}).call(this);
