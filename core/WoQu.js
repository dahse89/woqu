// Generated by CoffeeScript 1.4.0
(function() {
  var Add, Task, WoQu, db;

  db = require('./Db.js');

  Task = require('./model/Task.js');

  Add = require('./Add.js');

  WoQu = {
    Task: null,
    args: null,
    run: function() {
      WoQu.args = WoQu.getArgs();
      if (WoQu.args[0] === 'add') {
        return Add.init(WoQu.args.slice(1));
      } else if (WoQu.args.length === 1 && WoQu.args[0] === 'todo') {
        return WoQu.getTodo();
      } else if (WoQu.args.length === 1 && WoQu.args[0] === 'done') {
        return WoQu.setCurrentDone();
      } else if (WoQu.args.length === 1 && WoQu.args[0] === 'next') {
        return WoQu.nextFirst();
      }
      return console.error("Invalid command");
    },
    getArgs: function() {
      return process.argv.slice(2);
    },
    getDb: function() {
      return db;
    },
    nextFirst: function() {
      return WoQu.getDb().init(function(db) {
        return db.getCurrentTask(function(task) {
          task.increasePostponed();
          return db.updateTask(task, WoQu.getTodo);
        });
      });
    },
    setCurrentDone: function() {
      return WoQu.getDb().init(function(db) {
        return db.getCurrentTask(function(task) {
          task.setDoneAt(new Date());
          return db.updateTask(task, function() {
            return console.log(task.toString());
          });
        });
      });
    },
    getTodo: function() {
      return WoQu.getDb().init(function(db) {
        return db.getCurrentTask(function(task) {
          return console.log(task.toString());
        });
      });
    }
  };

  module.exports = WoQu;

}).call(this);
